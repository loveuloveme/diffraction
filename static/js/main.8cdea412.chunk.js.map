{"version":3,"sources":["waveColor.js","actions/index.js","actions/creator.js","components/ModelParams/ModelParamsItem.js","components/ModelParams/index.js","components/Model/index.js","lines.js","getImg.js","components/Info/index.js","getChartData.js","components/App/index.js","store/index.js","index.js"],"names":["waveColor","wavelength","r","g","b","alpha","Math","pow","value","type","actions","ModelParamsItem","name","units","min","max","setInput","range","selected","inputName","className","onClick","toFixed","ModelParams","callbacks","dispatch","useDispatch","L","useSelector","state","S","D","useState","setRange","range_","useEffect","action","step","values","onChange","renderTrack","props","children","style","height","borderRadius","width","backgroundColor","marginTop","marginLeft","marginRight","renderThumb","outline","boxShadow","Model","setWavesSvgWidth","useResizeDetector","ref","waves","lambda","maximum","k","l","PI","m","tan","asin","lines","maxK","floor","w","x","cos","y","sin","push","raysMaxima","forEach","item","index","x1","y1","x2","y2","stroke","strokeWidth","document","querySelectorAll","click","Array","ceil","fill","map","d","lightWidth","opacity","patternDiffraction","toHex","z","hex","toString","length","rgb2","relInt","undefined","r1","g1","b1","f","r2","g2","b2","rgb","intensity","a","c","amplitude","gradientArr","pix","u","uM","join","Info","data","waveL","Number","labels","intensities","intensityFunction","e","q","res","filter","getChartData","datasets","label","borderColor","options","responsive","scales","ticks","callback","title","display","text","font","size","weight","backgroundImage","getImg","App","store","createStore","parseInt","parseFloat","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8cdea412.chunk.js","sourcesContent":["export default function waveColor(wavelength) {\r\n    let r, g, b, alpha;\r\n    if (wavelength >= 380 && wavelength < 440) {\r\n        r = -(wavelength - 440) / (440 - 380);\r\n        g = 0.0;\r\n        b = 1.0;\r\n    }\r\n    else if (wavelength >= 440 && wavelength < 490) {\r\n        r = 0.0;\r\n        g = (wavelength - 440) / (490 - 440);\r\n        b = 1.0;\r\n    }\r\n    else if (wavelength >= 490 && wavelength < 510) {\r\n        r = 0.0;\r\n        g = 1.0;\r\n        b = -(wavelength - 510) / (510 - 490);\r\n    }\r\n    else if (wavelength >= 510 && wavelength < 580) {\r\n        r = (wavelength - 510) / (580 - 510);\r\n        g = 1.0;\r\n        b = 0.0;\r\n    }\r\n    else if (wavelength >= 580 && wavelength < 645) {\r\n        r = 1.0;\r\n        g = -(wavelength - 645) / (645 - 580);\r\n        b = 0.0;\r\n    }\r\n    else if (wavelength >= 645 && wavelength < 781) {\r\n        r = 1.0;\r\n        g = 0.0;\r\n        b = 0.0;\r\n    }\r\n    else {\r\n        r = 0.0;\r\n        g = 0.0;\r\n        b = 0.0;\r\n    }\r\n\r\n    if (wavelength >= 380 && wavelength < 420)\r\n        alpha = 0.3 + 0.7 * (wavelength - 380) / (420 - 380);\r\n    else if (wavelength >= 420 && wavelength < 701)\r\n        alpha = 1.0;\r\n    else if (wavelength >= 701 && wavelength < 781)\r\n        alpha = 0.3 + 0.7 * (780 - wavelength) / (780 - 700);\r\n    else\r\n        alpha = 0.0;\r\n\r\n    const gamma = 0.80;\r\n    r = r > 0 ? 255 * Math.pow(r * alpha, gamma) : 0;\r\n    g = g > 0 ? 255 * Math.pow(g * alpha, gamma) : 0;\r\n    b = b > 0 ? 255 * Math.pow(b * alpha, gamma) : 0;\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n}","export default {\r\n    SET_L: \"SET_L\",\r\n    SET_D: \"SET_D\",\r\n    SET_S: \"SET_S\",\r\n};","import actions from './index';\r\n\r\nexport default {\r\n    setL: value => {\r\n        return {\r\n            type: actions.SET_L,\r\n            value: value\r\n        }\r\n    },\r\n    setD: value => {\r\n        return {\r\n            type: actions.SET_D,\r\n            value: value\r\n        }\r\n    },\r\n    setS: value => {\r\n        return {\r\n            type: actions.SET_S,\r\n            value: value\r\n        }\r\n    }\r\n}","export default function ModelParamsItem({name, units, min, max, value, setInput, range}){\r\n    let onClick = () => {\r\n        let selected = name == range.inputName;\r\n        if(!selected){\r\n            setInput(min, max, value, units, name);\r\n        }else{\r\n            setInput(min, max, value, units, '');\r\n        }\r\n    };\r\n\r\n    let selected = name == range.inputName;\r\n\r\n    return(\r\n        <div className={\"model-params-item \" + (selected ? \"selected\" : \"\")} onClick={onClick}>\r\n            <div className=\"model-params-item__value\">{value.toFixed(1)}</div>\r\n            <div className=\"model-params-item__units\">{units}</div>\r\n            <div className=\"model-params-item__name\">{name}</div>\r\n        </div>\r\n    );\r\n}","import { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport action from '../../actions/creator'; \r\n\r\nimport ModelParamsItem from './ModelParamsItem';\r\n\r\nimport { Range } from 'react-range';\r\n\r\nexport default function ModelParams(callbacks){\r\n    const dispatch = useDispatch();\r\n\r\n    const L = useSelector(state => state.L);\r\n    const S = useSelector(state => state.S);\r\n    const D = useSelector(state => state.D);\r\n\r\n    const [range, setRange] = useState({\r\n        min: 0,\r\n        max: 1,\r\n        units: '??',\r\n        value: 0,\r\n        inputName: ''\r\n    });\r\n\r\n    \r\n    let setInput = (min, max, value, units, inputName) => {\r\n        let range_ = {...range};\r\n        range_.min = min;\r\n        range_.max = max;\r\n        range_.value = value;\r\n        range_.units = units;\r\n        range_.inputName = inputName;\r\n\r\n        setRange(range_);\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(range.inputName == 'λ'){\r\n            dispatch(action.setL(range.value));\r\n        }else if(range.inputName == 'S'){\r\n            dispatch(action.setS(range.value));\r\n        }else if(range.inputName == 'D'){\r\n            dispatch(action.setD(range.value));\r\n        }\r\n    }, [range]);\r\n\r\n    return(\r\n        <div className=\"model-params\">\r\n            <div className=\"model-params-item-wrapper\">\r\n                <ModelParamsItem name=\"λ\" units=\"нм\" min={380} max={780} value={L} setInput={setInput} range={range} />\r\n                <ModelParamsItem name=\"S\" units=\"м\" min={0.44} max={7.5} value={S} setInput={setInput} range={range} />\r\n                <ModelParamsItem name=\"D\" units=\"нм\" min={500} max={5000} value={D} setInput={setInput} range={range} />\r\n            </div>\r\n            <div className={\"model-params-input \" + (range.inputName == '' ? 'disabled' : '')}>\r\n                <div className=\"model-params-input-inner-wrapper\">\r\n                    <div className=\"model-params-input-value\">{range.min}</div>\r\n                    <Range\r\n                        step={0.1}\r\n                        min={range.min}\r\n                        max={range.max}\r\n                        values={[range.value]}\r\n                        onChange={(values) => {\r\n                            let range_ = {...range};\r\n                            range_.value = values[0];\r\n                            setRange(range_);\r\n                        }}\r\n\r\n                        renderTrack={({ props, children }) => (\r\n                            <div\r\n                                {...props}\r\n                                style={{\r\n                                    ...props.style,\r\n                                    height: '6px',\r\n                                    borderRadius: '2px',\r\n                                    width: '330px',\r\n                                    backgroundColor: '#ccc',\r\n                                    marginTop: '11px',\r\n                                    marginLeft: '15px',\r\n                                    marginRight: '15px'\r\n                                }}\r\n                            >\r\n                                {children}\r\n                            </div>\r\n                        )}\r\n\r\n                        renderThumb={({ props }) => (\r\n                            <div\r\n                                {...props}\r\n                                style={{\r\n                                    ...props.style,\r\n                                    height: '15px',\r\n                                    width: '15px',\r\n                                    borderRadius: '100px',\r\n                                    backgroundColor: '#fff',\r\n                                    outline: 'none',\r\n                                    boxShadow: 'rgba(0, 0, 0, 0.3) 0 1px 3px'\r\n                                }}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                    <div className=\"model-params-input-value\">{range.max}</div>\r\n                </div>\r\n                <div className=\"model-params-input-units\">{range.units}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useResizeDetector } from 'react-resize-detector';\r\n\r\nimport waveColor from '../../waveColor';\r\nimport lines from '../../lines';\r\nimport ModelParams from '../ModelParams';\r\n\r\nimport './index.scss';\r\n\r\nconst PIXEL_PER_METR = 740/7;\r\n\r\nfunction Model(){\r\n    const wavelength = useSelector(state => state.L);\r\n    const S = useSelector(state => state.S);\r\n    const D = useSelector(state => state.D);\r\n\r\n    const [wavesSvgWidth, setWavesSvgWidth] = useState(200);\r\n    \r\n    const { width, height, ref } = useResizeDetector();\r\n    \r\n    useEffect(() => {\r\n        if(!!width)\r\n        setWavesSvgWidth(width)\r\n    }, [width])\r\n\r\n    let waves = [];\r\n\r\n    let linePos = lines(wavelength*1e-9, D*1e-9);\r\n    \r\n    let lightWidth = 100;\r\n    let lightbetweenRange = 30;\r\n\r\n    linePos.forEach((item, index) => {\r\n        waves.push(<line x1=\"0\" y1=\"200\" x2={item.x} y2={item.y+200} stroke={waveColor(wavelength)} strokeWidth={`3px`} />);\r\n        waves.push(<line x1=\"0\" y1=\"200\" x2={item.x} y2={-item.y+200} stroke={waveColor(wavelength)} strokeWidth={`3px`} />);\r\n    });\r\n\r\n    waves.push(<line x1=\"0\" y1=\"200\" x2={1000} y2={200} stroke={waveColor(wavelength)} strokeWidth={`3px`} />);\r\n\r\n    return(\r\n        <div className=\"model\">\r\n            <h2><span className=\"grad\">Дифракция</span> микрочастиц<br/> на отверстии</h2>\r\n            <div className=\"model-inner-wrapper\">\r\n                <div className=\"model-scheme\">\r\n                    <div className=\"model-scheme__light\"\r\n                        onClick={() => {\r\n                            document.querySelectorAll('.model-params-item ')[0].click();\r\n                        }}\r\n                    >\r\n                        <svg>\r\n                            {(new Array(Math.ceil(400/lightbetweenRange)).fill(0)).map((item, index) => {\r\n                                return <path\r\n                                            key={index}\r\n                                            d={`M 0 ${lightbetweenRange*index + 5} h ${lightWidth-2} l -5 -5 m 5 5 l -5 5`}\r\n                                            fill=\"none\"\r\n                                            opacity=\"1\" \r\n                                            stroke={waveColor(wavelength)}\r\n                                            strokeWidth=\"3px\"\r\n                                        >\r\n                                        </path>\r\n                            })}\r\n                        </svg>\r\n                    </div>\r\n                    <div\r\n                        className=\"model-scheme__slit\"\r\n                        onClick={() => {\r\n                            document.querySelectorAll('.model-params-item ')[1].click();\r\n                        }}\r\n                    >\r\n                        <div className=\"model-scheme__slit__wall\">\r\n                            <div\r\n                                className=\"model-scheme__slit__wall__slit\"\r\n                                style={{\r\n                                    height: 1e-2*D\r\n                                }}\r\n                            ></div>\r\n                        </div>\r\n                        <div className=\"model-scheme__slit__name\">\r\n                            щель\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            width: PIXEL_PER_METR*S\r\n                        }}\r\n                        ref={ref}\r\n                        className=\"model-scheme__waves\"\r\n                    >\r\n                        <svg>\r\n                            {waves}\r\n                        </svg>\r\n                    </div>\r\n                    <div\r\n                        className=\"model-scheme__screen\"\r\n                        onClick={() => {\r\n                            document.querySelectorAll('.model-params-item ')[2].click();\r\n                        }}\r\n                    >\r\n                        <div className=\"model-scheme__screen__wall\"></div>\r\n                        <div className=\"model-scheme__screen__name\">\r\n                            экран\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ModelParams />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Model;","export default function lines(lambda, b){\r\n    var RAD = 1000;  \r\n\r\n    function maximum(k) {\r\n        if (k == 0) return 0;\r\n\r\n        var l = k*Math.PI;\r\n        var r = (k+0.5)*Math.PI;\r\n        var m = (l+r)/2;\r\n\r\n        while (r-l > 1e-10) {\r\n            if (Math.tan(m) > m) r = m; else l = m;\r\n            m = (l+r)/2;\r\n        }\r\n\r\n        if (m*lambda > Math.PI*b) return -1;\r\n\r\n        return Math.asin(m*lambda/(Math.PI*b));\r\n    }\r\n        \r\n\r\n    function raysMaxima() {\r\n        let lines = [];\r\n\r\n        var maxK = Math.floor(b/lambda+0.5);\r\n\r\n        for (var k=1; k<=maxK; k++) { \r\n            var w = maximum(k);\r\n            if (w < 0) break;\r\n            var x = RAD*Math.cos(w), y = RAD*Math.sin(w); \r\n\r\n            lines.push({\r\n                x, y\r\n            });\r\n        }\r\n\r\n        return lines;\r\n    }\r\n\r\n    return raysMaxima();\r\n}","import waveColor from './waveColor';\r\n\r\nexport default function patternDiffraction(lambda, b, L){\r\n    function toHex (z) {\r\n        if (z < 0) z = 0;                                        // Negative Zahl korrigieren\r\n        if (z > 1) z = 1;                                        // Zahl über 1 korrigieren\r\n        var n = Math.floor(256*z);                               // Multiplikation mit 256\r\n        var hex = n.toString(16);                                // Umwandlung in Hexadezimalzahl (Zeichenkette)\r\n        if (hex.length < 2) hex = \"0\"+hex;                       // Falls einstellig, führende Null hinzufügen\r\n        if (hex.length > 2) hex = \"ff\";                          // Zu große Hexadezimalzahl verhindern\r\n        return hex;                                              // Rückgabewert\r\n        }\r\n\r\n    function rgb (lambda, relInt) {\r\n        lambda *= 1e9;                                           // Umrechnung in nm\r\n        if (relInt == undefined) relInt = 1;                     // Gegebenenfalls Defaultwert für relInt verwenden\r\n        var r1 = 0, g1 = 0, b1 = 0;                              // Rot-, Grün- und Blau-Anteil (jeweils 0 bis 1)\r\n        if (lambda >= 380 && lambda < 440) {\r\n          r1 = (440-lambda)/60; g1 = 0; b1 = 1;\r\n          }\r\n        else if (lambda < 490) {\r\n          r1 = 0; g1 = (lambda-440)/50; b1 = 1;\r\n          }\r\n        else if (lambda < 510) {\r\n          r1 = 0; g1 = 1; b1 = (510-lambda)/20;\r\n          }\r\n        else if (lambda < 580) {\r\n          r1 = (lambda-510)/70; g1 = 1; b1 = 0;\r\n          }\r\n        else if (lambda < 645) {\r\n          r1 = 1; g1 = (645-lambda)/65; b1 = 0;\r\n          }\r\n        else if (lambda <= 780) {\r\n          r1 = 1; g1 = 0; b1 = 0;\r\n          }\r\n        var f = 0;                                               // Faktor für Abschwächung am Rand\r\n        if (lambda >= 380 && lambda < 420) \r\n          f = 0.3+0.7*(lambda-380)/40;\r\n        else if (lambda < 700)\r\n          f = 1;\r\n        else if (lambda <= 780)\r\n          f = 0.3+0.7*(780-lambda)/80;\r\n        var gamma = 0.8;                                         // Exponent\r\n        var r2 = relInt*Math.pow(f*r1,gamma);                    // Rot-Anteil unter Berücksichtigung der Intensität\r\n        var g2 = relInt*Math.pow(f*g1,gamma);                    // Grün-Anteil unter Berücksichtigung der Intensität\r\n        var b2 = relInt*Math.pow(f*b1,gamma);                    // Blau-Anteil unter Berücksichtigung der Intensität\r\n        return \"#\"+toHex(r2)+toHex(g2)+toHex(b2);                // Rückgabewert\r\n        }\r\n\r\n    function rgb2 (lambda, relInt) {\r\n        var i = Math.pow(relInt,1/3);                            // Vergrößerte Intensität\r\n        return rgb(lambda,i);                                    // Rückgabewert\r\n        }\r\n\r\n    function amplitude (x) {\r\n        if (x == 0) return 1;                                    // Rückgabewert für Maximum 0. Ordnung\r\n        var c = Math.PI*b*Math.sin(x)/lambda*L;                    // Hilfsgröße\r\n        return Math.sin(c)/c;                                    // Rückgabewert\r\n    }\r\n\r\n        \r\n    function intensity (x) {\r\n        var a = amplitude(x);                                    // Relative Amplitude\r\n        return a*a;                                              // Rückgabewert\r\n    }\r\n\r\n    var width = 1200;\r\n\r\n    let gradientArr = [];\r\n    var uM = width/2, vM = 360;                              // Mittelpunkt Beugungsmuster (Pixel)\r\n    var  w = 330;                                            // Breite (Pixel)\r\n    var  pix = w/Math.PI;                                    // Umrechnungsfaktor\r\n    // rectangle(20,vM-40,width-40,100,\"#000000\");              // Hintergrund (schwarz)    \r\n\r\n    for (var u=uM-w/2; u<=uM+w/2; u++) {                     // Von links nach rechts ...\r\n      var x = (uM-u)/pix;                                    // Winkel (Bogenmaß)\r\n      var c = rgb2(lambda,intensity(x));                     // Farbe\r\n        gradientArr.push(`${c} ${u}px`);\r\n    }\r\n\r\n    let patternStyle = 'linear-gradient(90deg, '+gradientArr.join(',') + ')';\r\n\r\n    return patternStyle;\r\n\r\n    // var i = alpha*pix;                                       // Aktueller Winkel, umgerechnet in Pixel\r\n    // arrowDown(uM-i,vM-30);                                   // Linker Pfeil\r\n    // arrowDown(uM+i,vM-30);                                   // Rechter Pfeil\r\n    // horAxis(uM,vM+30,\"#ffffff\");                             // Winkelskala (Grad)\r\n    \r\n}\r\n\r\n//patternDiffraction(500*1e-9, 3300*1e-9)\r\n\r\nfunction drawMonoInterfPicture(wavelength, d, L, b = 1, N = 1) {\r\n    function intensityFunction(x) {\r\n        let u = (Math.PI * b * x) / (wavelength* L);\r\n        let q = (Math.PI * d * x) / (wavelength* L);\r\n        return Math.pow(b, 2) * Math.pow(Math.sin(u) / u, 2) * Math.pow(Math.sin(N * q) / Math.sin(q), 2)\r\n    }\r\n\r\n    let labels = [];\r\n\r\n\r\n    for (let x = -3/2; x <= 3/2; x+=3/497) {\r\n        labels.push(x);\r\n    }\r\n\r\n    let //ctx = canvas.getContext(\"2d\"),\r\n        width = 1200,\r\n        height = 400,\r\n        intensities = [];\r\n\r\n    labels.forEach(function(x) {\r\n        intensities.push(intensityFunction(x))\r\n    });\r\n\r\n    let yStep = width / labels.length;\r\n\r\n    let Max = intensities[labels.length / 2 ];\r\n\r\n\r\n    let gradientArr = [];\r\n    let patternStyle = null;\r\n\r\n    labels.forEach(function(x, index) {\r\n        const yCoord = index * yStep;\r\n        const alpha = intensities[index] / Max;\r\n\r\n        const rgbColor = waveColor(wavelength);\r\n\r\n        gradientArr.push(`${rgbColor.replace(')', `, ${alpha})`).replace('rgb', 'rgba')} ${((x-labels[0])/(labels[labels.length - 1] - labels[0]))*100}%`);\r\n        patternStyle = 'linear-gradient(90deg, '+gradientArr.join(',') + ')';\r\n    });\r\n\r\n    return patternStyle;\r\n}","import { useSelector, useDispatch } from 'react-redux'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport getChartData from '../../getChartData';\r\nimport getImg from '../../getImg';\r\n\r\nimport './index.scss';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport waveColor from '../../waveColor';\r\n\r\nfunction Info(){\r\n    const wavelength = useSelector(state => state.L);\r\n    const S = useSelector(state => state.S);\r\n    const D = useSelector(state => state.D);\r\n\r\n    let data = getChartData(wavelength, D, S);\r\n\r\n    return(\r\n        <div className=\"info\">\r\n            <h2>Результаты</h2>\r\n            <h3>График</h3>\r\n\r\n            <Line  \r\n                className=\"info__chart\"\r\n                width=\"1200px\"\r\n                height=\"400px\"\r\n                \r\n                data={{\r\n                    labels: data.labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'I(x)',\r\n                            data: data.data,\r\n                            fill: false,\r\n                            backgroundColor: waveColor(wavelength),\r\n                            borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                        },\r\n                    ]\r\n                }}\r\n\r\n                options={{\r\n                    responsive: false,\r\n                    scales: {\r\n                        y: {\r\n                            ticks: {\r\n                                callback: function(value, index, values) {\r\n                                    return Math.floor(value*1e6);\r\n                                }\r\n                            },\r\n                            title: {\r\n                                display: true,\r\n                                text: 'I(мк)',\r\n                                font: {\r\n                                    size: 16,\r\n                                    weight: 'bold'\r\n                                }\r\n                            }\r\n                        },\r\n                        x: {\r\n                            ticks: {\r\n\r\n                            },\r\n                            title: {\r\n                                display: true,\r\n                                text: 'x(см)',\r\n                                font: {\r\n                                    size: 16,\r\n                                    weight: 'bold'\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n\r\n            <h3>интерференционная картина</h3>\r\n\r\n            <div\r\n                className=\"info__img\"\r\n                style={{\r\n                    backgroundImage: getImg(wavelength*1e-9, D*1e-9, S)\r\n                }}\r\n            ></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Info;","export default function getChartData(waveL, D, S){\r\n    let wavelength = Number(waveL),\r\n        N = 1,\r\n        b = 12 * 1e-3,\r\n        d = D * 1e-3,\r\n        L = S * 1e3;\r\n\r\n    let labels = [];\r\n    let intensities = [];\r\n\r\n    function intensityFunction(x) {\r\n        let e = 1e-6;\r\n        let u = (Math.PI * b * x) / (wavelength * e * L);\r\n        let q = (Math.PI * d * x) / (wavelength * e * L);\r\n        let res = Math.pow(b, 2) * Math.pow(Math.sin(u) / u, 2) * Math.pow(Math.sin(N * q) / Math.sin(q), 2)\r\n        intensities.push(res)\r\n    }\r\n\r\n    for (let x = -3/2 * 1e2; x <=3/2 * 1e2 ; x += 0.1  ) {\r\n        labels.push(x.toFixed(2));\r\n        intensityFunction(x);\r\n    }\r\n    \r\n\r\n    let indexSkip = 15;\r\n\r\n    return {\r\n        labels: labels.filter((item, index) => !(index % indexSkip)),\r\n        data: intensities.filter((item, index) => !(index % indexSkip)),\r\n    }\r\n}","import Model from '../Model';\n\nimport './App.scss';\nimport Info from '../Info/';\n\n\nfunction App(){\n    return (\n        <div className=\"app-wrapper\">\n            <Model />\n            <Info />\n        </div>\n    );\n}\n\nexport default App;","import { createStore } from 'redux';\r\n\r\nlet initialState = {\r\n    L: 500,\r\n    D: 2075,\r\n    S: 1\r\n};\r\n\r\nfunction reducer(state, action) {\r\n    switch(action.type) {\r\n        case \"SET_L\": return {...state, L: parseInt(action.value)};\r\n        case \"SET_D\": return {...state, D: parseFloat(action.value)};\r\n        case \"SET_S\": return {...state, S: parseFloat(action.value)};\r\n        \r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst store = createStore(reducer, initialState);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport store from './store';\nimport {Provider} from 'react-redux'\n\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}
{"version":3,"sources":["waveColor.js","actions/index.js","actions/creator.js","components/ModelParams/ModelParamsItem.js","components/ModelParams/index.js","getImg.js","components/Model/index.js","lines.js","components/Info/index.js","getChartData.js","components/App/index.js","store/index.js","index.js"],"names":["waveColor","wavelength","r","g","b","alpha","Math","pow","value","type","actions","ModelParamsItem","name","units","min","max","setInput","range","disabled","style","selected","inputName","className","onClick","toFixed","ModelParams","callbacks","dispatch","useDispatch","L","useSelector","state","S","D","useState","setRange","range_","useEffect","action","step","values","onChange","renderTrack","props","children","height","borderRadius","width","backgroundColor","marginTop","marginLeft","marginRight","renderThumb","outline","boxShadow","drawMonoInterfPicture","d","N","intensityFunction","x","e","u","PI","q","sin","labels","push","intensities","forEach","length","Max","gradientArr","patternStyle","index","join","PIXEL_PER_METR","Model","setWavesSvgWidth","useResizeDetector","ref","waves","linePos","lambda","maximum","k","l","m","tan","asin","lines","maxK","floor","w","cos","y","raysMaxima","angle","x1","y1","x2","y2","stroke","strokeWidth","item","document","querySelectorAll","click","Array","ceil","fill","map","lightWidth","opacity","markerStart","id","markerWidth","markerHeight","refX","refY","orient","points","markerUnits","fontSize","fontWeight","textAnchor","marker-end","backgroundImage","getImg","replace","Info","data","waveL","Number","res","filter","getChartData","datasets","label","borderColor","options","responsive","scales","ticks","callback","title","display","text","font","size","weight","App","store","createStore","parseInt","parseFloat","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2d41f51b.chunk.js","sourcesContent":["export default function waveColor(wavelength) {\r\n    let r, g, b, alpha;\r\n    if (wavelength >= 380 && wavelength < 440) {\r\n        r = -(wavelength - 440) / (440 - 380);\r\n        g = 0.0;\r\n        b = 1.0;\r\n    }\r\n    else if (wavelength >= 440 && wavelength < 490) {\r\n        r = 0.0;\r\n        g = (wavelength - 440) / (490 - 440);\r\n        b = 1.0;\r\n    }\r\n    else if (wavelength >= 490 && wavelength < 510) {\r\n        r = 0.0;\r\n        g = 1.0;\r\n        b = -(wavelength - 510) / (510 - 490);\r\n    }\r\n    else if (wavelength >= 510 && wavelength < 580) {\r\n        r = (wavelength - 510) / (580 - 510);\r\n        g = 1.0;\r\n        b = 0.0;\r\n    }\r\n    else if (wavelength >= 580 && wavelength < 645) {\r\n        r = 1.0;\r\n        g = -(wavelength - 645) / (645 - 580);\r\n        b = 0.0;\r\n    }\r\n    else if (wavelength >= 645 && wavelength < 781) {\r\n        r = 1.0;\r\n        g = 0.0;\r\n        b = 0.0;\r\n    }\r\n    else {\r\n        r = 0.0;\r\n        g = 0.0;\r\n        b = 0.0;\r\n    }\r\n\r\n    if (wavelength >= 380 && wavelength < 420)\r\n        alpha = 0.3 + 0.7 * (wavelength - 380) / (420 - 380);\r\n    else if (wavelength >= 420 && wavelength < 701)\r\n        alpha = 1.0;\r\n    else if (wavelength >= 701 && wavelength < 781)\r\n        alpha = 0.3 + 0.7 * (780 - wavelength) / (780 - 700);\r\n    else\r\n        alpha = 0.0;\r\n\r\n    const gamma = 0.80;\r\n    r = r > 0 ? 255 * Math.pow(r * alpha, gamma) : 0;\r\n    g = g > 0 ? 255 * Math.pow(g * alpha, gamma) : 0;\r\n    b = b > 0 ? 255 * Math.pow(b * alpha, gamma) : 0;\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n}","export default {\r\n    SET_L: \"SET_L\",\r\n    SET_D: \"SET_D\",\r\n    SET_S: \"SET_S\",\r\n};","import actions from './index';\r\n\r\nexport default {\r\n    setL: value => {\r\n        return {\r\n            type: actions.SET_L,\r\n            value: value\r\n        }\r\n    },\r\n    setD: value => {\r\n        return {\r\n            type: actions.SET_D,\r\n            value: value\r\n        }\r\n    },\r\n    setS: value => {\r\n        return {\r\n            type: actions.SET_S,\r\n            value: value\r\n        }\r\n    }\r\n}","export default function ModelParamsItem({name, units, min, max, value, setInput, range, disabled, style}){\r\n    let onClick = () => {\r\n        let selected = name == range.inputName;\r\n        if(!selected){\r\n            setInput(min, max, value, units, name);\r\n        }else{\r\n            setInput(min, max, value, units, '');\r\n        }\r\n    };\r\n\r\n    let selected = name == range.inputName;\r\n\r\n    return(\r\n        <div className={\"model-params-item \" + (selected ? \"selected\" : \"\") + (disabled ? \"disabled\" : \"\")} onClick={onClick} style={{...style}}>\r\n            <div className=\"model-params-item__value\">{value.toFixed(1)}</div>\r\n            <div className=\"model-params-item__units\">{units}</div>\r\n            <div className=\"model-params-item__name\">{name}</div>\r\n        </div>\r\n    );\r\n}","import { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport action from '../../actions/creator'; \r\n\r\nimport ModelParamsItem from './ModelParamsItem';\r\n\r\nimport { Range } from 'react-range';\r\n\r\nexport default function ModelParams(callbacks){\r\n    const dispatch = useDispatch();\r\n\r\n    const L = useSelector(state => state.L);\r\n    const S = useSelector(state => state.S);\r\n    const D = useSelector(state => state.D);\r\n\r\n    const [range, setRange] = useState({\r\n        min: 0,\r\n        max: 1,\r\n        units: '??',\r\n        value: 0,\r\n        inputName: ''\r\n    });\r\n\r\n    \r\n    let setInput = (min, max, value, units, inputName) => {\r\n        let range_ = {...range};\r\n        range_.min = min;\r\n        range_.max = max;\r\n        range_.value = value;\r\n        range_.units = units;\r\n        range_.inputName = inputName;\r\n\r\n        setRange(range_);\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(range.inputName == 'λ'){\r\n            dispatch(action.setL(range.value));\r\n        }else if(range.inputName == 'S'){\r\n            dispatch(action.setS(range.value));\r\n        }else if(range.inputName == 'D'){\r\n            dispatch(action.setD(range.value));\r\n        }\r\n    }, [range]);\r\n\r\n    return(\r\n        <div className=\"model-params\">\r\n            <div className=\"model-params-item-wrapper\">\r\n                <ModelParamsItem name=\"λ\" units=\"нм\" min={380} max={750} value={L} setInput={setInput} range={range} />\r\n                <ModelParamsItem name=\"S\" units=\"м\" min={0.44} max={7.5} value={S} setInput={setInput} range={range} />\r\n                <ModelParamsItem name=\"D\" units=\"нм\" min={750} max={5000} value={D} setInput={setInput} range={range} />\r\n                <ModelParamsItem name=\"h\" units=\"м\" min={500} max={5000} value={0.3} setInput={setInput} range={range} disabled />\r\n            </div>\r\n            <div className={\"model-params-input \" + (range.inputName == '' ? 'disabled' : '')}>\r\n                <div className=\"model-params-input-inner-wrapper\">\r\n                    <div className=\"model-params-input-value\">{range.min}</div>\r\n                    <Range\r\n                        step={0.1}\r\n                        min={range.min}\r\n                        max={range.max}\r\n                        values={[range.value]}\r\n                        onChange={(values) => {\r\n                            let range_ = {...range};\r\n                            range_.value = values[0];\r\n                            setRange(range_);\r\n                        }}\r\n\r\n                        renderTrack={({ props, children }) => (\r\n                            <div\r\n                                {...props}\r\n                                style={{\r\n                                    ...props.style,\r\n                                    height: '6px',\r\n                                    borderRadius: '2px',\r\n                                    width: '330px',\r\n                                    backgroundColor: '#ccc',\r\n                                    marginTop: '11px',\r\n                                    marginLeft: '15px',\r\n                                    marginRight: '15px'\r\n                                }}\r\n                            >\r\n                                {children}\r\n                            </div>\r\n                        )}\r\n\r\n                        renderThumb={({ props }) => (\r\n                            <div\r\n                                {...props}\r\n                                style={{\r\n                                    ...props.style,\r\n                                    height: '15px',\r\n                                    width: '15px',\r\n                                    borderRadius: '100px',\r\n                                    backgroundColor: '#fff',\r\n                                    outline: 'none',\r\n                                    boxShadow: 'rgba(0, 0, 0, 0.3) 0 1px 3px'\r\n                                }}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                    <div className=\"model-params-input-value\">{range.max}</div>\r\n                </div>\r\n                <div className=\"model-params-input-units\">{range.units}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import waveColor from './waveColor';\r\n\r\n// export default function patternDiffraction(lambda, b, L, width){\r\n//     function toHex(z){\r\n//         if (z < 0) z = 0;   \r\n//         if (z > 1) z = 1;  \r\n//         var n = Math.floor(256*z);\r\n//         var hex = n.toString(16); \r\n//         if (hex.length < 2) hex = \"0\"+hex;\r\n//         if (hex.length > 2) hex = \"ff\"; \r\n//         return hex;\r\n//     }\r\n\r\n//     function rgb (lambda, relInt) {\r\n//         lambda *= 1e9;          \r\n//         if (relInt == undefined) relInt = 1;    \r\n//         var r1 = 0, g1 = 0, b1 = 0;                        \r\n//         if (lambda >= 380 && lambda < 440){\r\n//           r1 = (440-lambda)/60; g1 = 0; b1 = 1;\r\n//         }\r\n//         else if (lambda < 490){\r\n//           r1 = 0; g1 = (lambda-440)/50; b1 = 1;\r\n//         }\r\n//         else if (lambda < 510){\r\n//           r1 = 0; g1 = 1; b1 = (510-lambda)/20;\r\n//         }\r\n//         else if (lambda < 580){\r\n//           r1 = (lambda-510)/70; g1 = 1; b1 = 0;\r\n//         }\r\n//         else if (lambda < 645){\r\n//           r1 = 1; g1 = (645-lambda)/65; b1 = 0;\r\n//         }\r\n//         else if(lambda <= 780){\r\n//           r1 = 1; g1 = 0; b1 = 0;\r\n//         }\r\n\r\n//         var f = 0;                                               \r\n//         if (lambda >= 380 && lambda < 420) \r\n//           f = 0.3+0.7*(lambda-380)/40;\r\n//         else if (lambda < 700)\r\n//           f = 1;\r\n//         else if (lambda <= 780)\r\n//           f = 0.3+0.7*(780-lambda)/80;\r\n//         var gamma = 0.8;                                         \r\n//         var r2 = relInt*Math.pow(f*r1,gamma);                   \r\n//         var g2 = relInt*Math.pow(f*g1,gamma);                    \r\n//         var b2 = relInt*Math.pow(f*b1,gamma);                   \r\n//         return \"#\"+toHex(r2)+toHex(g2)+toHex(b2);                \r\n//     }\r\n\r\n//     function rgb2(lambda, relInt){\r\n//         var i = Math.pow(relInt,1/3);                            \r\n//         return rgb(lambda,i);                                   \r\n//     }\r\n\r\n//     function amplitude(x){\r\n//         if (x == 0) return 1;                                    \r\n//         var c = Math.PI*b*Math.sin(x)/lambda*L;                    \r\n//         return Math.sin(c)/c;                                    \r\n//     }\r\n\r\n        \r\n//     function intensity(x){\r\n//         var a = amplitude(x);                                    \r\n//         return a*a;                                             \r\n//     }\r\n\r\n\r\n//     let gradientArr = [];\r\n//     var uM = width/2;                  \r\n//     var  w = 150;                                         \r\n//     var  pix = w/Math.PI;                               \r\n\r\n//     var max = (uM+w/2) - (uM-w/2);\r\n\r\n\r\n//     console.log(uM-w/2, uM+w/2);\r\n\r\n//     for (var u=uM-w/2; u<=uM+w/2; u++){\r\n//         var x = (uM-u)/pix;                                    \r\n//         var c = rgb2(lambda, intensity(x));                   \r\n//         gradientArr.push(`${c} ${((u-(uM-w/2))/max)*100}%`);\r\n//     }\r\n\r\n//     let patternStyle = 'linear-gradient(90deg, '+gradientArr.join(',') + ')';\r\n\r\n//     return patternStyle;\r\n    \r\n// }\r\n\r\nexport default function drawMonoInterfPicture(wavelength, b, L, width, d = 2.5, N = 1) {\r\n    wavelength *= 1e9;\r\n    b *= 1e5;\r\n    L *= 170;\r\n\r\n    function intensityFunction(x) {\r\n        let e = 1e-6;\r\n        let u = (Math.PI * b * x) / (wavelength * e * L);\r\n        let q = (Math.PI * d * x) / (wavelength * e * L);\r\n        return Math.pow(b, 2) * Math.pow(Math.sin(u) / u, 2) * Math.pow(Math.sin(N * q) / Math.sin(q), 2)\r\n      }\r\n\r\n    let labels = [];\r\n\r\n\r\n    for (let x = -3/2; x <= 3/2; x+=3/497) {\r\n        labels.push(x);\r\n    }\r\n\r\n    let //ctx = canvas.getContext(\"2d\"),\r\n        height = 400,\r\n        intensities = [];\r\n\r\n    labels.forEach(function(x) {\r\n        intensities.push(intensityFunction(x))\r\n    });\r\n\r\n    let yStep = width / labels.length;\r\n\r\n    let Max = intensities[labels.length / 2 ];\r\n\r\n\r\n    let gradientArr = [];\r\n    let patternStyle = null;\r\n\r\n    labels.forEach(function(x, index) {\r\n        const yCoord = index * yStep;\r\n        const alpha = intensities[index] / Max;\r\n\r\n        const rgbColor = waveColor(wavelength);\r\n\r\n        //gradientArr.push(`${rgbColor.replace(')', `, ${alpha})`).replace('rgb', 'rgba')} ${((x-labels[0])/(labels[labels.length - 1] - labels[0]))*100}%`);\r\n        gradientArr.push(`rgba(189, 195, 199, ${alpha}) ${((x-labels[0])/(labels[labels.length - 1] - labels[0]))*100}%`);\r\n        patternStyle = 'linear-gradient(90deg, '+gradientArr.join(',') + ')';\r\n    });\r\n\r\n    return patternStyle;\r\n}","import { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useResizeDetector } from 'react-resize-detector';\r\n\r\nimport waveColor from '../../waveColor';\r\nimport lines from '../../lines';\r\nimport ModelParams from '../ModelParams';\r\n\r\nimport getImg from '../../getImg';\r\n\r\nimport './index.scss';\r\n\r\nconst PIXEL_PER_METR = 740/7;\r\n\r\nfunction Model(){\r\n    const wavelength = useSelector(state => state.L);\r\n    const S = useSelector(state => state.S);\r\n    const D = useSelector(state => state.D);\r\n\r\n    const [wavesSvgWidth, setWavesSvgWidth] = useState(200);\r\n    \r\n    const { width, height, ref } = useResizeDetector();\r\n    \r\n    useEffect(() => {\r\n        if(!!width)\r\n        setWavesSvgWidth(width)\r\n    }, [width])\r\n\r\n    let waves = [];\r\n\r\n    let linePos = lines(wavelength*1e-9, D*1e-9);\r\n    \r\n    let lightWidth = 100;\r\n    let lightbetweenRange = 30;\r\n\r\n\r\n    let angle = Math.asin(wavelength/D);\r\n\r\n    waves.push(<line x1=\"0\" y1=\"200\" x2={S*1000} y2={1000*S*Math.sin(angle)+200} stroke={\"#bdc3c7\"} strokeWidth={`5px`} />);\r\n    waves.push(<line x1=\"0\" y1=\"200\" x2={S*1000} y2={-1000*S*Math.sin(angle)+200} stroke={\"#bdc3c7\"} strokeWidth={`5px`} />);\r\n    waves.push(<line x1=\"0\" y1=\"200\" x2={1000} y2={200} stroke={\"#bdc3c7\"} strokeWidth={`5px`} />);\r\n\r\n    linePos.forEach((item, index) => {\r\n        //waves.push(<line x1=\"0\" y1=\"200\" x2={item.x} y2={item.y+200} stroke={waveColor(wavelength)} strokeWidth={`3px`} />);\r\n        //waves.push(<line x1=\"0\" y1=\"200\" x2={item.x} y2={-item.y+200} stroke={waveColor(wavelength)} strokeWidth={`3px`} />);\r\n    });\r\n\r\n    return(\r\n        <div className=\"model\">\r\n            <h2><span className=\"grad\">Дифракция</span> электронов<br/> на щели</h2>\r\n            <div className=\"model-inner-wrapper\">\r\n                <div className=\"model-scheme\">\r\n                    <div className=\"model-scheme__light\"\r\n                        onClick={() => {\r\n                            document.querySelectorAll('.model-params-item ')[0].click();\r\n                        }}\r\n                    >\r\n                        <svg>                  \r\n                            {(new Array(Math.ceil(400/lightbetweenRange)).fill(0)).map((item, index) => {\r\n                                return <path\r\n                                            key={index}\r\n                                            d={`M 0 ${lightbetweenRange*index + 5} h ${lightWidth-2} l -5 -5 m 5 5 l -5 5`}\r\n                                            fill=\"none\"\r\n                                            opacity=\"1\" \r\n                                            stroke={\"#3498db\"}\r\n                                            strokeWidth=\"3px\"\r\n                                            markerStart=\"url(#electronstart)\"\r\n                                        >\r\n                                        </path>\r\n                            })}\r\n                        </svg>\r\n                    </div>\r\n                    <div\r\n                        className=\"model-scheme__slit\"\r\n                        onClick={() => {\r\n                            document.querySelectorAll('.model-params-item ')[1].click();\r\n                        }}\r\n                    >\r\n                        <div className=\"model-scheme__slit__wall\">\r\n                            <div\r\n                                className=\"model-scheme__slit__wall__slit\"\r\n                                style={{\r\n                                    height: 1e-3*D\r\n                                }}\r\n                            ></div>\r\n                        </div>\r\n                        <div className=\"model-scheme__slit__name\">\r\n                            щель\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            width: PIXEL_PER_METR*S\r\n                        }}\r\n                        ref={ref}\r\n                        className=\"model-scheme__waves\"\r\n                    >\r\n                        <svg>\r\n                            <defs>\r\n                                <marker id=\"startarrow\" markerWidth=\"10\" markerHeight=\"7\" \r\n                                refX=\"5\" refY=\"1.5\" orient=\"auto\">\r\n                                    <polygon points=\"5 0, 5 3, 0 1.5\" fill=\"#000000\" />\r\n                                </marker>\r\n                                <marker id=\"endarrow\" markerWidth=\"10\" markerHeight=\"7\" \r\n                                refX=\"0\" refY=\"1.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\r\n                                    <polygon points=\"0 0, 5 1.5, 0 3\" fill=\"#000000\" />\r\n                                </marker>\r\n                            </defs>\r\n\r\n                            <text x=\"24\" y=\"400\" style={{fontSize: 22, fontWeight: 'bold'}} textAnchor=\"middle\">S</text>\r\n\r\n                            <text x={S*PIXEL_PER_METR/2} y=\"10%\" style={{fontSize: 22, fontWeight: 'bold'}} textAnchor=\"middle\">h</text>\r\n\r\n                            <line x1={S*PIXEL_PER_METR/2+15} x2={S*PIXEL_PER_METR/2+15} y1=\"387\" y2=\"15\" strokeWidth=\"3px\" stroke=\"#000000\" marker-end=\"url(#endarrow)\" markerStart=\"url(#startarrow)\" />\r\n                            <line x1=\"15\" x2={S*PIXEL_PER_METR - 15} y1=\"380\" y2=\"380\" strokeWidth=\"3px\" stroke=\"#000000\" marker-end=\"url(#endarrow)\" markerStart=\"url(#startarrow)\" />   \r\n                            {waves}\r\n                        </svg>\r\n                    </div>\r\n                    <div\r\n                        className=\"model-scheme__screen\"\r\n                        onClick={() => {\r\n                            document.querySelectorAll('.model-params-item ')[2].click();\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"model-scheme__screen__wall\"\r\n                            style={{\r\n                                backgroundImage: getImg(wavelength*1e-9, D*1e-9, S, S*PIXEL_PER_METR).replace('90deg', '180deg')\r\n                            }}\r\n                        ></div>\r\n                        <div className=\"model-scheme__screen__name\">\r\n                            фотопластина\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ModelParams />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Model;","export default function lines(lambda, b, S){\r\n    var RAD = 1000;  \r\n\r\n    function maximum(k) {\r\n        if (k == 0) return 0;\r\n\r\n        var l = k*Math.PI;\r\n        var r = (k+0.5)*Math.PI;\r\n        var m = (l+r)/2;\r\n\r\n        while (r-l > 1e-10) {\r\n            if (Math.tan(m) > m) r = m; else l = m;\r\n            m = (l+r)/2;\r\n        }\r\n\r\n        if (m*lambda > Math.PI*b) return -1;\r\n\r\n        return Math.asin(m*lambda/(Math.PI*b));\r\n    }\r\n        \r\n\r\n    function raysMaxima() {\r\n        let lines = [];\r\n\r\n        var maxK = Math.floor(b/lambda+0.5);\r\n\r\n        for (var k=1; k<=maxK; k++) { \r\n            var w = maximum(k);\r\n            if (w < 0) break;\r\n            var x = RAD*Math.cos(w), y = RAD*Math.sin(w); \r\n\r\n            lines.push({\r\n                x, y\r\n            });\r\n        }\r\n\r\n        return lines;\r\n    }\r\n\r\n    return raysMaxima();\r\n}","import { useSelector, useDispatch } from 'react-redux'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport getChartData from '../../getChartData';\r\nimport getImg from '../../getImg';\r\n\r\nimport './index.scss';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport waveColor from '../../waveColor';\r\n\r\nconst PIXEL_PER_METR = 740/7;\r\n\r\nfunction Info(){\r\n    const wavelength = useSelector(state => state.L);\r\n    const S = useSelector(state => state.S);\r\n    const D = useSelector(state => state.D);\r\n\r\n    let data = getChartData(wavelength, D, S);\r\n\r\n    return(\r\n        <div className=\"info\">\r\n            <h2>Результаты</h2>\r\n            <h3>Распределение интенсивности <span>при дифракции на щели</span></h3>\r\n            <Line  \r\n                className=\"info__chart\"\r\n                width=\"1200px\"\r\n                height=\"400px\"\r\n                \r\n                data={{\r\n                    labels: data.labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'I(x)',\r\n                            data: data.data,\r\n                            fill: false,\r\n                            backgroundColor: \"rgba(189, 195, 199,1.0)\",\r\n                            borderColor: 'rgba(0,0,0)',\r\n                        },\r\n                    ]\r\n                }}\r\n\r\n                options={{\r\n                    responsive: false,\r\n                    scales: {\r\n                        y: {\r\n                            ticks: {\r\n                                callback: function(value, index, values) {\r\n                                    return Math.floor(value*1e6);\r\n                                }\r\n                            },\r\n                            title: {\r\n                                display: true,\r\n                                text: 'I',\r\n                                font: {\r\n                                    size: 16,\r\n                                    weight: 'bold'\r\n                                }\r\n                            }\r\n                        },\r\n                        x: {\r\n                            ticks: {\r\n\r\n                            },\r\n                            title: {\r\n                                display: true,\r\n                                text: 'x(см)',\r\n                                font: {\r\n                                    size: 16,\r\n                                    weight: 'bold'\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n\r\n            {/* <h3>дифракционная картина</h3> */}\r\n\r\n            {/* <div\r\n                className=\"info__img\"\r\n                style={{\r\n                    backgroundImage: getImg(wavelength*1e-9, D*1e-9, S, S*PIXEL_PER_METR)\r\n                }}\r\n            ></div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Info;","export default function getChartData(waveL, D, S){\r\n    let wavelength = Number(waveL),\r\n        N = 1,\r\n        b = 12 * 1e-3,\r\n        d = D * 1e-3,\r\n        L = S * 1e3;\r\n\r\n    let labels = [];\r\n    let intensities = [];\r\n\r\n    function intensityFunction(x) {\r\n        let e = 1e-6;\r\n        let u = (Math.PI * b * x) / (wavelength * e * L);\r\n        let q = (Math.PI * d * x) / (wavelength * e * L);\r\n        let res = Math.pow(b, 2) * Math.pow(Math.sin(u) / u, 2) * Math.pow(Math.sin(N * q) / Math.sin(q), 2)\r\n        intensities.push(res)\r\n    }\r\n\r\n    for (let x = -3/2 * 1e2; x <=3/2 * 1e2 ; x += 0.1  ) {\r\n        labels.push(x.toFixed(2)/10);\r\n        intensityFunction(x);\r\n    }\r\n    \r\n\r\n    let indexSkip = 15;\r\n\r\n    return {\r\n        labels: labels.filter((item, index) => !(index % indexSkip)),\r\n        data: intensities.filter((item, index) => !(index % indexSkip)),\r\n    }\r\n}","import Model from '../Model';\n\nimport './App.scss';\nimport Info from '../Info/';\n\n\nfunction App(){\n    return (\n        <div className=\"app-wrapper\">\n            <Model />\n            <Info />\n        </div>\n    );\n}\n\nexport default App;","import { createStore } from 'redux';\r\n\r\nlet initialState = {\r\n    L: 500,\r\n    D: 2075,\r\n    S: 5\r\n};\r\n\r\nfunction reducer(state, action) {\r\n    switch(action.type) {\r\n        case \"SET_L\": return {...state, L: parseInt(action.value)};\r\n        case \"SET_D\": return {...state, D: parseFloat(action.value)};\r\n        case \"SET_S\": return {...state, S: parseFloat(action.value)};\r\n        \r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst store = createStore(reducer, initialState);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport store from './store';\nimport {Provider} from 'react-redux'\n\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}
{"version":3,"sources":["waveColor.js","actions/index.js","actions/creator.js","components/ModelParams/ModelParamsItem.js","components/ModelParams/index.js","components/Model/index.js","getImg.js","components/Info/index.js","getChartData.js","components/App/index.js","store/index.js","index.js"],"names":["waveColor","wavelength","r","g","b","alpha","Math","pow","value","type","actions","ModelParamsItem","name","units","min","max","setInput","range","selected","inputName","className","onClick","toFixed","ModelParams","callbacks","dispatch","useDispatch","L","useSelector","state","S","D","useState","setRange","range_","useEffect","action","onChange","e","target","step","Model","wavesSvgWidth","setWavesSvgWidth","useResizeDetector","width","ref","height","waves","i","waveSize","parseFloat","dAttr","push","d","fill","stroke","strokeWidth","Array","ceil","map","item","index","lightWidth","opacity","style","drawMonoInterfPicture","ctx","N","intensityFunction","x","u","PI","q","sin","labels","intensities","forEach","length","Max","gradientArr","patternStyle","rgbColor","replace","join","Info","data","waveL","Number","res","filter","getChartData","datasets","label","backgroundColor","borderColor","options","responsive","backgroundImage","getImg","App","store","createStore","parseInt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ac715e4.chunk.js","sourcesContent":["export default function waveColor(wavelength) {\r\n    let r, g, b, alpha;\r\n    if (wavelength >= 380 && wavelength < 440) {\r\n        r = -(wavelength - 440) / (440 - 380);\r\n        g = 0.0;\r\n        b = 1.0;\r\n    }\r\n    else if (wavelength >= 440 && wavelength < 490) {\r\n        r = 0.0;\r\n        g = (wavelength - 440) / (490 - 440);\r\n        b = 1.0;\r\n    }\r\n    else if (wavelength >= 490 && wavelength < 510) {\r\n        r = 0.0;\r\n        g = 1.0;\r\n        b = -(wavelength - 510) / (510 - 490);\r\n    }\r\n    else if (wavelength >= 510 && wavelength < 580) {\r\n        r = (wavelength - 510) / (580 - 510);\r\n        g = 1.0;\r\n        b = 0.0;\r\n    }\r\n    else if (wavelength >= 580 && wavelength < 645) {\r\n        r = 1.0;\r\n        g = -(wavelength - 645) / (645 - 580);\r\n        b = 0.0;\r\n    }\r\n    else if (wavelength >= 645 && wavelength < 781) {\r\n        r = 1.0;\r\n        g = 0.0;\r\n        b = 0.0;\r\n    }\r\n    else {\r\n        r = 0.0;\r\n        g = 0.0;\r\n        b = 0.0;\r\n    }\r\n\r\n    if (wavelength >= 380 && wavelength < 420)\r\n        alpha = 0.3 + 0.7 * (wavelength - 380) / (420 - 380);\r\n    else if (wavelength >= 420 && wavelength < 701)\r\n        alpha = 1.0;\r\n    else if (wavelength >= 701 && wavelength < 781)\r\n        alpha = 0.3 + 0.7 * (780 - wavelength) / (780 - 700);\r\n    else\r\n        alpha = 0.0;\r\n\r\n    const gamma = 0.80;\r\n    r = r > 0 ? 255 * Math.pow(r * alpha, gamma) : 0;\r\n    g = g > 0 ? 255 * Math.pow(g * alpha, gamma) : 0;\r\n    b = b > 0 ? 255 * Math.pow(b * alpha, gamma) : 0;\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n}","export default {\r\n    SET_L: \"SET_L\",\r\n    SET_D: \"SET_D\",\r\n    SET_S: \"SET_S\",\r\n};","import actions from './index';\r\n\r\nexport default {\r\n    setL: value => {\r\n        return {\r\n            type: actions.SET_L,\r\n            value: value\r\n        }\r\n    },\r\n    setD: value => {\r\n        return {\r\n            type: actions.SET_D,\r\n            value: value\r\n        }\r\n    },\r\n    setS: value => {\r\n        return {\r\n            type: actions.SET_S,\r\n            value: value\r\n        }\r\n    }\r\n}","export default function ModelParamsItem({name, units, min, max, value, setInput, range}){\r\n    let onClick = () => {\r\n        let selected = name == range.inputName;\r\n        if(!selected){\r\n            setInput(min, max, value, units, name);\r\n        }else{\r\n            setInput(min, max, value, units, '');\r\n        }\r\n    };\r\n\r\n    let selected = name == range.inputName;\r\n\r\n    return(\r\n        <div className={\"model-params-item \" + (selected ? \"selected\" : \"\")} onClick={onClick}>\r\n            <div className=\"model-params-item__value\">{value.toFixed(1)}</div>\r\n            <div className=\"model-params-item__units\">{units}</div>\r\n            <div className=\"model-params-item__name\">{name}</div>\r\n        </div>\r\n    );\r\n}","import { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport action from '../../actions/creator'; \r\n\r\nimport ModelParamsItem from './ModelParamsItem';\r\n\r\nexport default function ModelParams(callbacks){\r\n    const dispatch = useDispatch();\r\n\r\n    const L = useSelector(state => state.L);\r\n    const S = useSelector(state => state.S);\r\n    const D = useSelector(state => state.D);\r\n\r\n    const [range, setRange] = useState({\r\n        min: 0,\r\n        max: 100,\r\n        units: 'mm',\r\n        value: 0,\r\n        inputName: ''\r\n    });\r\n\r\n    \r\n    let setInput = (min, max, value, units, inputName) => {\r\n        let range_ = {...range};\r\n        range_.min = min;\r\n        range_.max = max;\r\n        range_.value = value;\r\n        range_.units = units;\r\n        range_.inputName = inputName;\r\n\r\n        setRange(range_);\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(range.inputName == 'λ'){\r\n            dispatch(action.setL(range.value));\r\n        }else if(range.inputName == 'S'){\r\n            dispatch(action.setS(range.value));\r\n        }else if(range.inputName == 'D'){\r\n            dispatch(action.setD(range.value));\r\n        }\r\n    }, [range]);\r\n\r\n    return(\r\n        <div className=\"model-params\">\r\n            <div className=\"model-params-item-wrapper\">\r\n                <ModelParamsItem name=\"λ\" units=\"нм\" min={380} max={780} value={L} setInput={setInput} range={range} />\r\n                <ModelParamsItem name=\"S\" units=\"м\" min={0.44} max={7.5} value={S} setInput={setInput} range={range} />\r\n                <ModelParamsItem name=\"D\" units=\"мкм\" min={0.05} max={50} value={D} setInput={setInput} range={range} />\r\n            </div>\r\n            <div className={\"model-params-input \" + (range.inputName == '' ? 'disabled' : '')}>\r\n                <div className=\"model-params-input-inner-wrapper\">\r\n                    <div className=\"model-params-input-value\">{range.min}</div>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            let range_ = {...range};\r\n                            range_.value = e.target.value;\r\n                            setRange(range_);\r\n                        }}\r\n                        value={range.value}\r\n                        min={range.min}\r\n                        max={range.max}\r\n                        step=\"0.01\"\r\n                        type=\"range\"\r\n                    />\r\n                    <div className=\"model-params-input-value\">{range.max}</div>\r\n                </div>\r\n                <div className=\"model-params-input-units\">{range.units}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useResizeDetector } from 'react-resize-detector';\r\n\r\nimport waveColor from '../../waveColor';\r\n\r\nimport ModelParams from '../ModelParams';\r\n\r\nimport './index.scss';\r\n\r\nconst PIXEL_PER_METR = 740/7;\r\n\r\nfunction Model(){\r\n    const wavelength = useSelector(state => state.L);\r\n    const S = useSelector(state => state.S);\r\n    const D = useSelector(state => state.D);\r\n\r\n    const [wavesSvgWidth, setWavesSvgWidth] = useState(200);\r\n    \r\n    const { width, height, ref } = useResizeDetector();\r\n    \r\n    useEffect(() => {\r\n        if(!!width)\r\n        setWavesSvgWidth(width)\r\n    }, [width])\r\n\r\n    let lightWidth = 100;\r\n    let lightbetweenRange = 30;\r\n\r\n\r\n    let waves = [];\r\n\r\n    for (let i = 0; ; i++) {\r\n        const waveSize = (wavelength-175) / 10 * (i + 1);\r\n        if ((waveSize - 10) > parseFloat(wavesSvgWidth)) break;\r\n        let dAttr = `M ${waveSize - 10} ${400 / 2 - waveSize} q ${waveSize / 2} ${waveSize} 0 ${waveSize * 2}`;\r\n        \r\n        var strokeWidth = 3;\r\n        waves.push(<path key={i} className=\"wave\" d={dAttr} fill=\"none\" stroke={waveColor(wavelength)} strokeWidth={`${strokeWidth}px`} />);\r\n    }\r\n\r\n    return(\r\n        <div className=\"model\">\r\n            <h2>Дифракция микрочастиц на отверстии</h2>\r\n            <div className=\"model-inner-wrapper\">\r\n                <div className=\"model-scheme\">\r\n                    <div className=\"model-scheme__light\">\r\n                        <svg>\r\n                            {(new Array(Math.ceil(400/lightbetweenRange)).fill(0)).map((item, index) => {\r\n                                return <path\r\n                                            key={index}\r\n                                            d={`M 0 ${lightbetweenRange*index + 5} h ${lightWidth-2} l -5 -5 m 5 5 l -5 5`}\r\n                                            fill=\"none\"\r\n                                            opacity=\"1\" \r\n                                            stroke={waveColor(wavelength)}\r\n                                            strokeWidth=\"3px\"\r\n                                        >\r\n                                        </path>\r\n                            })}\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"model-scheme__slit\">\r\n                        <div className=\"model-scheme__slit__wall\">\r\n                            <div\r\n                                className=\"model-scheme__slit__wall__slit\"\r\n                                style={{\r\n                                    height: 1*D\r\n                                }}\r\n                            ></div>\r\n                        </div>\r\n                        <div className=\"model-scheme__slit__name\">\r\n                            щель\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            width: PIXEL_PER_METR*S\r\n                        }}\r\n                        ref={ref}\r\n                        className=\"model-scheme__waves\"\r\n                    >\r\n                        <svg>\r\n                            {waves}\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"model-scheme__screen\">\r\n                        <div className=\"model-scheme__screen__wall\"></div>\r\n                        <div className=\"model-scheme__screen__name\">\r\n                            экран\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ModelParams />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Model;","import waveColor from './waveColor';\r\n\r\nexport default function drawMonoInterfPicture(wavelength, d, L, ctx, b = 12 * 1e-3, N = 1) {\r\n\r\n    function intensityFunction(x) {\r\n        let e = 1e-6;\r\n        let u = (Math.PI * b * x) / (wavelength * e * L);\r\n        let q = (Math.PI * d * x) / (wavelength * e * L);\r\n        return Math.pow(b, 2) * Math.pow(Math.sin(u) / u, 2) * Math.pow(Math.sin(N * q) / Math.sin(q), 2)\r\n    }\r\n\r\n    let labels = [];\r\n\r\n\r\n    for (let x = -3/2; x <= 3/2; x+=3/497) {\r\n        labels.push(x);\r\n    }\r\n\r\n    let //ctx = canvas.getContext(\"2d\"),\r\n        width = 1200,\r\n        height = 400,\r\n        intensities = [];\r\n\r\n    labels.forEach(function(x) {\r\n        intensities.push(intensityFunction(x))\r\n    });\r\n\r\n    let yStep = width / labels.length;\r\n\r\n    let Max = intensities[labels.length / 2 ];\r\n\r\n\r\n    let gradientArr = [];\r\n    let patternStyle = null;\r\n\r\n    labels.forEach(function(x, index) {\r\n        const yCoord = index * yStep;\r\n        const alpha = intensities[index] / Max;\r\n\r\n        const rgbColor = waveColor(wavelength);\r\n\r\n        gradientArr.push(`${rgbColor.replace(')', `, ${alpha})`).replace('rgb', 'rgba')} ${((x-labels[0])/(labels[labels.length - 1] - labels[0]))*100}%`);\r\n        patternStyle = 'linear-gradient(90deg, '+gradientArr.join(',') + ')';\r\n    });\r\n\r\n    return patternStyle;\r\n}","import { useSelector, useDispatch } from 'react-redux'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport getChartData from '../../getChartData';\r\nimport getImg from '../../getImg';\r\n\r\nimport './index.scss';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport waveColor from '../../waveColor';\r\n\r\nfunction Info(){\r\n    const wavelength = useSelector(state => state.L);\r\n    const S = useSelector(state => state.S);\r\n    const D = useSelector(state => state.D);\r\n\r\n    let data = getChartData(wavelength, D, S);\r\n\r\n    return(\r\n        <div className=\"info\">\r\n            <h2>Результаты</h2>\r\n            <h3>График</h3>\r\n\r\n            <Line  \r\n                className=\"info__chart\"\r\n                width=\"1200px\"\r\n                height=\"400px\"\r\n                \r\n                data={{\r\n                    labels: data.labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'I(x)',\r\n                            data: data.data,\r\n                            fill: false,\r\n                            backgroundColor: waveColor(wavelength),\r\n                            borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                        },\r\n                    ]\r\n                }}\r\n\r\n                options={{\r\n                    responsive: false\r\n                }}\r\n            />\r\n\r\n            <h3>интерференционная картина</h3>\r\n\r\n            <div\r\n                className=\"info__img\"\r\n                style={{\r\n                    backgroundImage: getImg(wavelength, D, S)\r\n                }}\r\n            ></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Info;","export default function getChartData(waveL, D, S){\r\n    let wavelength = Number(waveL),\r\n        N = 1,\r\n        b = 12 * 1e-3,\r\n        d = D * 1e-3,\r\n        L = S * 1e3;\r\n\r\n    let labels = [];\r\n    let intensities = [];\r\n\r\n    function intensityFunction(x) {\r\n        let e = 1e-6;\r\n        let u = (Math.PI * b * x) / (wavelength * e * L);\r\n        let q = (Math.PI * d * x) / (wavelength * e * L);\r\n        let res = Math.pow(b, 2) * Math.pow(Math.sin(u) / u, 2) * Math.pow(Math.sin(N * q) / Math.sin(q), 2)\r\n        intensities.push(res)\r\n    }\r\n\r\n\r\n\r\n\r\n    for (let x = -3/2 * 1e2; x <=3/2 * 1e2 ; x += 0.1  ) {\r\n        labels.push(x.toFixed(2));\r\n        intensityFunction(x);\r\n    }\r\n    \r\n    // for (let x = -3/2 * 1e2; x <= 3/2 * 1e2; x+=3/510 ) {\r\n    //     labels.push(x.toFixed(2));\r\n    //     intensityFunction(x);\r\n    // }\r\n\r\n    let indexSkip = 15;\r\n\r\n    return {\r\n        labels: labels.filter((item, index) => !(index % indexSkip)),\r\n        data: intensities.filter((item, index) => !(index % indexSkip)),\r\n    }\r\n\r\n    // if(d > b) {\r\n    //     chart.data.labels = labels;\r\n    //     chart.data.datasets[0].data = intensities;\r\n    //     drawMonoInterfPicture(wavelength, d * 100, b * 100, N, L);\r\n    // } else {\r\n    //     drawMonoInterfPicture(0, d * 100, b * 100, N, L);\r\n    //     chart.data.labels = 0;\r\n    //     chart.data.datasets[0].data = 0;\r\n    // }\r\n\r\n    // chart.update();\r\n}","import Model from '../Model';\n\nimport './App.scss';\nimport Info from '../Info/';\n\n\nfunction App(){\n    return (\n        <div className=\"app-wrapper\">\n            <Model />\n            <Info />\n        </div>\n    );\n}\n\nexport default App;","import { createStore } from 'redux';\r\n\r\nlet initialState = {\r\n    L: 380,\r\n    D: 10,\r\n    S: 3\r\n};\r\n\r\nfunction reducer(state, action) {\r\n    switch(action.type) {\r\n        case \"SET_L\": return {...state, L: parseInt(action.value)};\r\n        case \"SET_D\": return {...state, D: parseFloat(action.value)};\r\n        case \"SET_S\": return {...state, S: parseFloat(action.value)};\r\n        \r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst store = createStore(reducer, initialState);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport store from './store';\nimport {Provider} from 'react-redux'\n\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}